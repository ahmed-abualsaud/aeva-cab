input CreateOndemandRequestInput {
  user_id: ID! @rules(apply: ["required"])
  verb: String! @rules(apply: ["required", "in:RENT,ORGANIZE,SUBSCRIBE"])
  type: String @rules(apply: ["in:EVENT,TRIP,RIDESHARE,CARSHARE"])
  start_date: DateTime! @rules(apply: ["required"])
  end_date: DateTime! @rules(apply: ["required"])
  from_lat: String! @rules(apply: ["required"])
  from_lng: String ! @rules(apply: ["required"])
  to_lat: String! @rules(apply: ["required"])
  to_lng: String! @rules(apply: ["required"])
  from_address: String
  to_address: String
  frequency: String @rules(apply: ["in:DAILY,ONE_TIME"])
  way: String @rules(apply: ["in:ONE_WAY,TWO_WAYS"])
  classification: String @rules(apply: ["in:EDUCATIONAL,CORPORATE,INDIVIDUAL"])
  comment: String
  no_of_users: Int
  vehicles: [RequestVehicles!]! @rules(apply: ["required"])
}

input UpdateOndemandRequestInput {
  id: ID! @rules(apply: ["required"])
  status: String @rules(apply: ["in:ACCEPTED,REJECTED,STARTED,COMPLETED,CANCELLED,PENDING"])
  comment: String
  response: String
}

input RequestVehicles {
  car_type_id: ID! @rules(apply: ["required"])
  car_model_id: ID! @rules(apply: ["required"])
  count: Int! @rules(apply: ["required"])
}

type OndemandRequest {
  id: ID
  user: User @belongsTo
  verb: String
  type: String
  start_date: DateTime
  end_date: DateTime
  from_lat: String
  from_lng: String 
  to_lat: String
  to_lng: String
  from_address: String
  to_address: String
  frequency: String
  way: String
  classification: String
  no_of_users: Int
  status: String
  comment: String
  response: String
  created_at: DateTime
  deleted_at: DateTime
  vehicles: [OndemandRequestVehicle] @hasMany
}

type OndemandRequestVehicle {
  id: ID
  carType: CarType @belongsTo
  carModel: CarModel @belongsTo
  count: Int
}