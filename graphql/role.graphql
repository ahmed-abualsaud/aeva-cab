input CreateRoleInput {
  first_name: String! @rules(apply: ["required"])
  last_name: String! @rules(apply: ["required"])
  email: String! @rules(apply: ["required", "email", "unique:roles,email"])
  password: String! @rules(apply: ["required", "min:8"])
  phone: String
  role_type_id: ID! @rules(apply: ["required"])
  dashboard: Boolean
  roles: Boolean
  archive: Boolean
  communication: Boolean
  promocodes: Boolean
  business: Boolean
  commute: Boolean
  ondemand: Boolean
  fleet: Boolean
  payment: Boolean
  cancellation: Boolean
}

input UpdateRoleInput {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  phone: String
  role_type_id: ID
  dashboard: Boolean
  roles: Boolean
  archive: Boolean
  communication: Boolean
  promocodes: Boolean
  business: Boolean
  commute: Boolean
  ondemand: Boolean
  fleet: Boolean
  payment: Boolean
  cancellation: Boolean
  status: Boolean
}

input LoginInput {
  username: String!
  password: String!
}

type CreateRoleResponse {
  tokens: AuthPayload
  status: RegisterStatuses!
}

enum RegisterStatuses {
  MUST_VERIFY_EMAIL
  SUCCESS
}

type LogoutResponse {
  status: String!
  message: String
}

type AuthPayload {
  access_token: String
  refresh_token: String
  expires_in: Int
  token_type: String
  role: Role
}

type Role {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  phone: String
  role_type: RoleType! @belongsTo
  dashboard: Boolean
  roles: Boolean
  archive: Boolean
  communication: Boolean
  promocodes: Boolean
  business: Boolean
  commute: Boolean
  ondemand: Boolean
  fleet: Boolean
  payment: Boolean
  cancellation: Boolean
  employee_id: String
  status: Boolean
}