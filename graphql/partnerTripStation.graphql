input CreatePartnerTripStationInput {
  name: String
  latitude: String! @rules(apply: ["required"])
  longitude: String! @rules(apply: ["required"])
  partner_trip_id: ID! @rules(apply: ["required"])
  created_by: ID
  accepted_at: DateTime
}

input UpdatePartnerTripStationInput {
  id: ID! @rules(apply: ["required"])
  name: String
  latitude: String
  longitude: String
  accepted_at: DateTime
}

input GetPartnerTripStationsInput {
  partner_trip_id: ID! @rules(apply: ["required"])
  status: String! @rules(apply: ["required", "in:accepted,notAccepted"])
}

input AcceptPartnerTripStationInput {
  trip_id: ID! @rules(apply: ["required"])
  station_id: ID! @rules(apply: ["required"])
}

type AcceptPartnerTripStationResponse {
  status: Boolean!
  message: String
}

type PartnerTripStation {
  id: ID
  name: String
  latitude: String
  longitude: String
  created_by: User @belongsTo
  accepted_at: DateTime
  state: String
  users: [User] @belongsToMany
}