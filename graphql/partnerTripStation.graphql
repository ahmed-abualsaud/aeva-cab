input CreatePartnerTripStationInput {
  id: ID
  name: String
  latitude: String! @rules(apply: ["required"])
  longitude: String! @rules(apply: ["required"])
  trip_id: ID
  state: String
  created_by: ID
  accepted_at: DateTime
} 

input CreatePartnerTripStationsInput {
  trip_id: ID! @rules(apply: ["required"])
  stations: [CreatePartnerTripStationInput!]! @rules(apply: ["required"])
}

input UpdatePartnerTripStationInput {
  id: ID! @rules(apply: ["required"])
  trip_id: ID
  name: String
  latitude: String
  longitude: String
  state: String
  accepted_at: DateTime
}

input UpdateStationsRouteInput {
  stations: [StationsRouteInput!]! @rules(apply: ["required"])
}

input StationsRouteInput {
  id: ID! @rules(apply: ["required"])
  duration: Int
  distance: Int
}

input GetPartnerTripStationsInput {
  trip_id: ID! @rules(apply: ["required"])
  status: String! @rules(apply: ["required", "in:accepted,notAccepted"])
}

input AcceptPartnerTripStationInput {
  trip_id: ID! @rules(apply: ["required"])
  station_id: ID! @rules(apply: ["required"])
}

type PartnerTripStation {
  id: ID
  name: String
  latitude: String
  longitude: String
  created_by: User @belongsTo
  created_at: DateTime
  accepted_at: DateTime
  deleted_at: DateTime
  state: String
  distance: Int
  duration: Int
  users: [User] @belongsToMany
}