input CreateUserInput {
  name: String! @rules(apply: ["required"])
  email: String @rules(apply: ["email", "unique:users,email"])
  phone: String @rules(apply: ["unique:users,phone"])
  password: String
  provider: String
  provider_id: String
  partner_id: ID
  trip_id: ID
  title: String
  avatar: Upload
  platform: String @rules(apply: ["in:android,ios"])
  device_id: String
  ref_code: String
}

input CreateMultipleUsersInput {
  partner_id: ID
  trip_id: ID
  users: [UserFromFileInput]! @rules(apply: ["required"])
}

input UserFromFileInput {
  name: String! @rules(apply: ["required"])
  phone: String! @rules(apply: ["required"])
}

input UpdateUserInput {
  id: ID! @rules(apply: ["required"])
  name: String
  email: String
  partner_id: ID
  phone: String
  emergency_no: String
  secondary_no: String
  title: String
  avatar: Upload
  phone_verified_at: String
  device_id: String
}

input UserPhoneVerificationInput {
  phone: String! @rules(apply: ["required"])
}

input LoginInput {
  emailOrPhone: String! @rules(apply: ["required"])
  password: String! @rules(apply: ["required"])
  platform: String @rules(apply: ["in:android,ios"])
  device_id: String
}

input SocialLoginInput {
  provider: String! @rules(apply: ["required", "in:facebook,google,apple"])
  token: String! @rules(apply: ["required"])
  platform: String @rules(apply: ["in:android,ios"])
  device_id: String
}

type UserPayload {
  access_token: String
  user: User
}

type UserPhoneVerifyPayload {
  verificationCode: String
}

input ForgotPasswordInput {
  email: String! @rules(apply: ["required", "email"])
  type: String! @rules(apply: ["required", "in:users,drivers,partners,admins"])
}

type DefaultResponse {
  status: Boolean!
  message: String 
}

input NewPasswordWithCodeInput {
  email: String! @rules(apply: ["required", "email"])
  type: String! @rules(apply: ["required", "in:users,drivers,partners,admins"])
  token: String! @rules(apply: ["required", "string"])
  password: String! @rules(apply: ["required", "confirmed", "min:8"])
  password_confirmation: String!
}

input ChangePasswordInput {
  id: ID! @rules(apply: ["required"])
  current_password: String! @rules(apply: ["required"])
  new_password: String! @rules(apply: ["required", "confirmed"])
  new_password_confirmation: String!
}

type User {
  id: ID
  name: String
  email: String
  phone: String
  emergency_no: String
  secondary_no: String
  avatar: String
  title: String
  partner_id: ID
  payment_mode: String
  latitude: String
  longitude: String
  wallet_balance: Float
  rating: Float
  is_absent: Boolean
  is_picked_up: Boolean
  phone_verified_at: String
  ref_code: String
  created_at: String
  updated_at: String
  partner: Partner @belongsTo
}