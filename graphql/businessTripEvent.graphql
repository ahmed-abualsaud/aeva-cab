input ChangeBusinessTripPickupStatusInput {
  trip_id: ID! @rules(apply: ["required"])
  trip_name: String! @rules(apply: ["required"])
  user_id: ID! @rules(apply: ["required"])
  user_name: String! @rules(apply: ["required"])
  is_picked_up: Boolean! @rules(apply: ["required"])
  log_id: String! @rules(apply: ["required"])
  latitude: Float! @rules(apply: ["required"])
  longitude: Float! @rules(apply: ["required"])
  driver_id: ID! @rules(apply: ["required"])
}

input ChangeBusinessTripAttendanceStatusInput {
  date: Date! @rules(apply: ["required"])
  trip_id: ID! @rules(apply: ["required"])
  trip_name: String! @rules(apply: ["required"])
  user_id: ID! @rules(apply: ["required"])
  user_name: String! @rules(apply: ["required"])
  is_absent: Boolean! @rules(apply: ["required"])
  log_id: String! @rules(apply: ["required"])
  latitude: Float! @rules(apply: ["required"])
  longitude: Float! @rules(apply: ["required"])
  driver_id: ID! @rules(apply: ["required"])
  by: String! @rules(apply: ["required", "in:driver,user"])
}

input SelectBusinessTripUsersInput {
  trip_id: ID! @rules(apply: ["required"])
  trip_name: String! @rules(apply: ["required"])
  log_id: String! @rules(apply: ["required"])
  latitude: Float! @rules(apply: ["required"])
  longitude: Float! @rules(apply: ["required"])
  users: [UserObj] @rules(apply: ["required"])
}

input UserObj {
  id: ID! @rules(apply: ["required"])
  name: String! @rules(apply: ["required"])
}

type BusinessTripEvent {
  log_id: String
  trip_id: ID
  trip_name: String
  trip_time: String
  trip_duration: Int
  trip_distance: Int
  driver_id: ID
  driver_name: String
  map_url: String
  content: TripEventContent
}