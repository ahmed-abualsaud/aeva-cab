input StartTripInput {
  trip_id: ID! @rules(apply: ["required"])
  latitude: String! @rules(apply: ["required"])
  longitude: String! @rules(apply: ["required"])
}

input EndTripInput {
  trip_id: ID! @rules(apply: ["required"])
  log_id: String! @rules(apply: ["required"])
  latitude: String! @rules(apply: ["required"])
  longitude: String! @rules(apply: ["required"])
}

input UpdateBusinessTripDriverLocationInput {
  trip_id: ID! @rules(apply: ["required"])
  log_id: String! @rules(apply: ["required"])
  latitude: String! @rules(apply: ["required"])
  longitude: String! @rules(apply: ["required"])
}

input NearYouInput {
  station_id: ID! @rules(apply: ["required"])
}

input ChangeBusinessTripUserStatusInput {
  trip_id: ID! @rules(apply: ["required"])
  driver_id: ID! @rules(apply: ["required"])
  status: String! @rules(apply: ["in:ABSENT,ARRIVED"])
}

input SelectUsersInput {
  trip_id: ID! @rules(apply: ["required"])
  log_id: String! @rules(apply: ["required"])
  latitude: String! @rules(apply: ["required"])
  longitude: String! @rules(apply: ["required"])
  users: [ID!]! @rules(apply: ["required"])
}

type BusinessTripLogsResponse {
  log_id: String
  date: String
}

type BusinessTripLogResponse {
  time: String
  status: String
  latitude: String
  longitude: String
  user: String
}

type BusinessTripEventsResponse {
  trip_id: ID
  trip_name: String
  partner_id: ID
  partner_name: String
  status: String
  created_at: String
}

type TripLog {
  id: ID
  log_id: String
  created_at: DateTime
  updated_at: DateTime
  latitude: String
  longitude: String
  user: User @belongsTo
  status: String
}