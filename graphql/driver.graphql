input CreateDriverInput {
  name: String! @rules(apply: ["required"])
  fleet_id: ID
  email: String @rules(apply: ["email", "unique:drivers,email"])
  phone: String @rules(apply: ["unique:drivers,phone"])
  password: String
  license_expires_on: Date
  avatar: Upload
  city: String
  vehicle: String
  status: Boolean
}

input UpdateDriverInput {
  id: ID! @rules(apply: ["required"])
  name: String
  email: String
  phone: String
  fleet_id: ID
  license_expires_on: Date
  avatar: Upload
  status: Boolean
}

type DriverAuthPayload {
  access_token: String
  driver: Driver
}

type Driver {
  id: ID
  name: String
  email: String
  phone: String
  license_expires_on: Date
  avatar: String
  latitude: String
  longitude: String
  rating: Float
  status: Boolean
  city: String
  vehicle: String
  created_at: String
  updated_at: String
  fleet: Fleet @belongsTo
  trips: [BusinessTrip] @hasMany
  vehicles: [Vehicle] @hasMany
  deviceTokens: [DeviceToken] @morphMany
}