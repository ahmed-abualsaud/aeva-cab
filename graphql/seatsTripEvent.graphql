input StartSeatsTripInput {
  trip_id: ID! @rules(apply: ["required"])
  trip_time: String! @rules(apply: ["required"])
  latitude: String! @rules(apply: ["required"])
  longitude: String! @rules(apply: ["required"])
}

input PickSeatsTripUserInput {
  booking_id: ID! @rules(apply: ["required"])
}

input DropSeatsTripUserInput {
  log_id: String! @rules(apply: ["required"])
  booking_id: ID! @rules(apply: ["required"])
  user_id: ID! @rules(apply: ["required"])
  trip_id: ID! @rules(apply: ["required"])
  trip_time: String! @rules(apply: ["required"])
  payable: Float! @rules(apply: ["required"])
  paid: Float! @rules(apply: ["required"])
  notes: String
}

input AtSeatsTripStationInput {
  eta: String! @rules(apply: ["required"])
  station_id: ID! @rules(apply: ["required"])
  station_name: String! @rules(apply: ["required"])
  trip_id: ID! @rules(apply: ["required"])
  trip_name: String! @rules(apply: ["required"])
  log_id: String! @rules(apply: ["required"])
  latitude: String! @rules(apply: ["required"])
  longitude: String! @rules(apply: ["required"])
}

type SeatsTripEvent {
  log_id: String
  trip_time: String
  map_url: String
  content: TripEventContent
  created_at: DateTime
  updated_at: DateTime
  trip: SeatsTrip @belongsTo
  driver: Driver @belongsTo
}